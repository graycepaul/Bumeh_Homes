{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Documents/projects/Web%20Apps/Bumeh%20Homes/src/components/EntryModal.jsx"],"sourcesContent":["\"use client\";\n\nimport { useState, useEffect } from \"react\";\n\nexport default function AddLogModal({\n  show,\n  onClose,\n  onAddLog,\n  trips: initialTrips = 1,\n}) {\n  // Fixed transport costs and product prices (in Naira)\n  const TRANSPORT_COST = { Idu: 40000, Aviation: 80000 };\n  const PRODUCT_PRICES = {\n    Dust: 12000,\n    \"3/8\": 12000,\n    \"3/4\": 11000,\n  };\n\n  const [trips, setTrips] = useState(initialTrips);\n  const [newLog, setNewLog] = useState({\n    date: \"\",\n    location: \"Idu\",\n    trips: trips,\n    customer: \"\",\n    products: [{ name: \"Dust\", tonnagePerTrip: Array(trips).fill(0) }],\n    paymentStatus: \"Pending\",\n  });\n\n  useEffect(() => {\n    // Adjust tonnagePerTrip arrays when trips changes\n    const updatedProducts = newLog.products.map((p) => ({\n      ...p,\n      tonnagePerTrip:\n        p.tonnagePerTrip.length === trips\n          ? p.tonnagePerTrip\n          : Array(trips).fill(0),\n    }));\n    setNewLog((prev) => ({ ...prev, trips, products: updatedProducts }));\n  }, [trips]);\n\n  const handleAddProduct = () => {\n    setNewLog({\n      ...newLog,\n      products: [\n        ...newLog.products,\n        { name: \"Dust\", tonnagePerTrip: Array(trips).fill(0) },\n      ],\n    });\n  };\n\n  const handleRemoveProduct = (index) => {\n    const updatedProducts = [...newLog.products];\n    updatedProducts.splice(index, 1);\n    setNewLog({ ...newLog, products: updatedProducts });\n  };\n\n  // Calculate product total: sum of all tons × price per ton\n  const calculateProductTotal = (product) => {\n    const totalTons = product.tonnagePerTrip.reduce(\n      (sum, tons) => sum + tons,\n      0\n    );\n    return totalTons * PRODUCT_PRICES[product.name];\n  };\n\n  // Calculate transport total: number of trips × fixed transport cost\n  const calculateTransportTotal = () => trips * TRANSPORT_COST[newLog.location];\n\n  // Grand total: (sum of all products total) + transport total\n  const calculateGrandTotal = () =>\n    newLog.products.reduce((sum, p) => sum + calculateProductTotal(p), 0) +\n    calculateTransportTotal();\n\n  const formatCurrency = (amount) =>\n    new Intl.NumberFormat(\"en-NG\", {\n      style: \"currency\",\n      currency: \"NGN\",\n    }).format(amount);\n\n  const getTotalTonnageForProduct = (product) =>\n    product.tonnagePerTrip.reduce((sum, tons) => sum + tons, 0);\n\n  const getTotalTonnage = () =>\n    newLog.products.reduce(\n      (sum, product) => sum + getTotalTonnageForProduct(product),\n      0\n    );\n\n  if (!show) return null;\n\n  return (\n    <div className=\"fixed inset-0 bg-black/60 backdrop-blur-sm flex items-center justify-center z-50 p-4 animate-in fade-in duration-300\">\n      <div className=\"bg-white rounded-3xl w-full max-w-4xl shadow-2xl border border-white/20 animate-in zoom-in-95 duration-300 max-h-[90vh] overflow-y-auto\">\n        {/* Header */}\n        <div className=\"flex items-center justify-between p-6 border-b border-slate-200 sticky top-0 bg-white rounded-t-3xl\">\n          <div>\n            <h2 className=\"text-2xl font-bold text-slate-900\">\n              New Delivery Log\n            </h2>\n            <p className=\"text-sm text-slate-600 mt-1\">\n              Add customer delivery information\n            </p>\n          </div>\n          <button\n            onClick={onClose}\n            className=\"p-2 hover:bg-slate-100 rounded-2xl transition-colors duration-200\"\n          >\n            <svg\n              className=\"w-5 h-5 text-slate-500\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M6 18L18 6M6 6l12 12\"\n              />\n            </svg>\n          </button>\n        </div>\n\n        <div className=\"p-6\">\n          {/* Basic Information */}\n          <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6 mb-8\">\n            {/* Left Column */}\n            <div className=\"flex flex-col sm:flex-row w-full gap-4 justify-between\">\n              <div className=\"w-full\">\n                <label className=\"block text-sm font-medium text-slate-700 mb-2\">\n                  Date *\n                </label>\n                <input\n                  type=\"date\"\n                  value={newLog.date}\n                  onChange={(e) =>\n                    setNewLog({ ...newLog, date: e.target.value })\n                  }\n                  className=\"w-full px-4 py-3 bg-slate-50 border border-slate-200 rounded-2xl focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500 outline-none transition-all duration-200\"\n                  required\n                />\n              </div>\n\n              <div className=\"w-full\">\n                <label className=\"block text-sm font-medium text-slate-700 mb-2\">\n                  Customer Name *\n                </label>\n                <input\n                  type=\"text\"\n                  value={newLog.customer}\n                  onChange={(e) =>\n                    setNewLog({ ...newLog, customer: e.target.value })\n                  }\n                  className=\"w-full px-4 py-3 bg-slate-50 border border-slate-200 rounded-2xl focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500 outline-none transition-all duration-200\"\n                  placeholder=\"Enter customer name\"\n                  required\n                />\n              </div>\n            </div>\n\n            {/* Right Column */}\n            <div className=\"flex flex-col sm:flex-row w-full gap-4 justify-between\">\n              <div className=\"w-full\">\n                <label className=\"block text-sm font-medium text-slate-700 mb-2\">\n                  Location *\n                </label>\n                <select\n                  value={newLog.location}\n                  onChange={(e) =>\n                    setNewLog({ ...newLog, location: e.target.value })\n                  }\n                  className=\"w-full px-4 py-3 bg-slate-50 border border-slate-200 rounded-2xl focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500 outline-none transition-all duration-200\"\n                >\n                  <option value=\"Idu\">\n                    Idu - {formatCurrency(TRANSPORT_COST.Idu)} per trip\n                  </option>\n                  <option value=\"Aviation\">\n                    Aviation - {formatCurrency(TRANSPORT_COST.Aviation)} per\n                    trip\n                  </option>\n                </select>\n              </div>\n\n              <div className=\"w-full\">\n                <label className=\"block text-sm font-medium text-slate-700 mb-2\">\n                  Trips *\n                </label>\n                <input\n                  type=\"number\"\n                  min={1}\n                  max={50}\n                  value={trips}\n                  onChange={(e) =>\n                    setTrips(Math.max(1, Math.min(50, Number(e.target.value))))\n                  }\n                  className=\"w-full px-4 py-3 bg-slate-50 border border-slate-200 rounded-2xl focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500 outline-none transition-all duration-200\"\n                />\n              </div>\n\n              <div className=\"w-full\">\n                <label className=\"block text-sm font-medium text-slate-700 mb-2\">\n                  Payment Status\n                </label>\n                <select\n                  value={newLog.paymentStatus}\n                  onChange={(e) =>\n                    setNewLog({ ...newLog, paymentStatus: e.target.value })\n                  }\n                  className=\"w-full px-4 py-3 bg-slate-50 border border-slate-200 rounded-2xl focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500 outline-none transition-all duration-200\"\n                >\n                  <option>Pending</option>\n                  <option>Paid</option>\n                </select>\n              </div>\n            </div>\n          </div>\n\n          {/* Products Section */}\n          <div className=\"border-t border-slate-200 pt-6\">\n            <div className=\"flex justify-between items-center mb-4\">\n              <div>\n                <h3 className=\"text-lg font-semibold text-slate-900\">\n                  Products\n                </h3>\n                <p className=\"text-sm text-slate-600\">\n                  Add products and tonnage for each trip\n                </p>\n              </div>\n              <button\n                type=\"button\"\n                onClick={handleAddProduct}\n                className=\"flex items-center gap-2 text-sm sm:text-base px-4 py-2 bg-emerald-50 text-emerald-700 rounded-xl hover:bg-emerald-100 transition-colors duration-200 font-medium\"\n              >\n                <svg\n                  className=\"w-4 h-4\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n                  />\n                </svg>\n                Add Product\n              </button>\n            </div>\n\n            {/* Products List */}\n            <div className=\"space-y-4\">\n              {newLog.products.map((product, productIndex) => (\n                <div\n                  key={productIndex}\n                  className=\"border border-slate-200 rounded-2xl p-4 bg-slate-50/50 hover:border-slate-300 transition-colors duration-200\"\n                >\n                  <div className=\"flex flex-wrap items-center gap-4 mb-3\">\n                    <select\n                      value={product.name}\n                      onChange={(e) => {\n                        const updatedProducts = [...newLog.products];\n                        updatedProducts[productIndex].name = e.target.value;\n                        setNewLog({ ...newLog, products: updatedProducts });\n                      }}\n                      className=\"px-4 py-2 bg-white border border-slate-200 rounded-xl focus:ring-2 focus:ring-emerald-500 focus:border-emerald-500 outline-none font-medium\"\n                    >\n                      {Object.keys(PRODUCT_PRICES).map((name) => (\n                        <option key={name} value={name}>\n                          {name} - {formatCurrency(PRODUCT_PRICES[name])}/ton\n                        </option>\n                      ))}\n                    </select>\n\n                    <div className=\"text-sm text-slate-600\">\n                      <span className=\"font-medium\">\n                        {getTotalTonnageForProduct(product).toFixed(2)}t\n                      </span>{\" \"}\n                      total\n                    </div>\n\n                    <div className=\"text-sm font-medium text-emerald-600\">\n                      {formatCurrency(calculateProductTotal(product))}\n                    </div>\n\n                    {newLog.products.length > 1 && (\n                      <button\n                        type=\"button\"\n                        onClick={() => handleRemoveProduct(productIndex)}\n                        className=\"ml-auto p-1 text-red-500 hover:text-red-700 hover:bg-red-50 rounded-lg transition-colors duration-200\"\n                      >\n                        <svg\n                          className=\"w-5 h-5\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          viewBox=\"0 0 24 24\"\n                        >\n                          <path\n                            strokeLinecap=\"round\"\n                            strokeLinejoin=\"round\"\n                            strokeWidth={2}\n                            d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"\n                          />\n                        </svg>\n                      </button>\n                    )}\n                  </div>\n\n                  {/* Trip Inputs */}\n                  <div className=\"grid grid-cols-2 sm:grid-cols-3 md:grid-cols-4 lg:grid-cols-6 gap-3\">\n                    {product.tonnagePerTrip.map((tonnage, tripIndex) => (\n                      <div key={tripIndex}>\n                        <label className=\"text-xs font-medium text-slate-600 block mb-1\">\n                          Trip {tripIndex + 1} (tons)\n                        </label>\n                        <input\n                          type=\"number\"\n                          min={0}\n                          step={0.01}\n                          value={tonnage}\n                          onChange={(e) => {\n                            const updatedProducts = [...newLog.products];\n                            updatedProducts[productIndex].tonnagePerTrip[\n                              tripIndex\n                            ] = Number(e.target.value);\n                            setNewLog({\n                              ...newLog,\n                              products: updatedProducts,\n                            });\n                          }}\n                          className=\"w-full px-3 py-2 bg-white border border-slate-200 rounded-lg focus:ring-1 focus:ring-emerald-500 focus:border-emerald-500 outline-none transition-all duration-200\"\n                          placeholder=\"0.00\"\n                        />\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              ))}\n            </div>\n          </div>\n\n          {/* Summary Section */}\n          <div className=\"border-t border-slate-200 pt-6 mt-6\">\n            <div className=\"grid grid-cols-1 md:grid-cols-4 gap-4 mb-6\">\n              <div className=\"bg-slate-50 rounded-2xl p-4\">\n                <div className=\"text-sm font-medium text-slate-600 mb-1\">\n                  Total Trips\n                </div>\n                <div className=\"text-2xl font-bold text-slate-900\">{trips}</div>\n              </div>\n\n              <div className=\"bg-slate-50 rounded-2xl p-4\">\n                <div className=\"text-sm font-medium text-slate-600 mb-1\">\n                  Total Tonnage\n                </div>\n                <div className=\"text-2xl font-bold text-slate-900\">\n                  {getTotalTonnage().toFixed(2)}t\n                </div>\n              </div>\n\n              <div className=\"bg-blue-50 rounded-2xl p-4\">\n                <div className=\"text-sm font-medium text-blue-600 mb-1\">\n                  Transport Cost\n                </div>\n                <div className=\"text-2xl font-bold text-blue-900\">\n                  {formatCurrency(calculateTransportTotal())}\n                </div>\n              </div>\n\n              <div className=\"bg-emerald-50 rounded-2xl p-4\">\n                <div className=\"text-sm font-medium text-emerald-600 mb-1\">\n                  Products Total\n                </div>\n                <div className=\"text-2xl font-bold text-emerald-900\">\n                  {formatCurrency(\n                    newLog.products.reduce(\n                      (sum, p) => sum + calculateProductTotal(p),\n                      0\n                    )\n                  )}\n                </div>\n              </div>\n            </div>\n\n            {/* Grand Total */}\n            <div className=\"bg-gradient-to-r from-slate-900 to-slate-800 rounded-2xl p-6 text-center\">\n              <div className=\"text-sm font-medium text-slate-300 mb-1\">\n                Grand Total\n              </div>\n              <div className=\"text-3xl font-bold text-white\">\n                {formatCurrency(calculateGrandTotal())}\n              </div>\n              <div className=\"text-xs text-slate-400 mt-2\">\n                Products:{\" \"}\n                {formatCurrency(\n                  newLog.products.reduce(\n                    (sum, p) => sum + calculateProductTotal(p),\n                    0\n                  )\n                )}\n                + Transport: {formatCurrency(calculateTransportTotal())}\n              </div>\n            </div>\n          </div>\n        </div>\n\n        {/* Footer */}\n        <div className=\"border-t border-slate-200 p-6 bg-slate-50/50 sticky bottom-0 rounded-b-3xl\">\n          <div className=\"flex flex-col sm:flex-row justify-between items-center gap-4\">\n            <div className=\"text-sm text-slate-600\">\n              Required fields are marked with *\n            </div>\n\n            <div className=\"flex gap-3 w-full sm:w-auto\">\n              <button\n                onClick={onClose}\n                className=\"flex-1 sm:flex-none px-6 py-3 rounded-2xl border border-slate-300 text-slate-700 hover:bg-slate-50 font-medium transition-colors duration-200\"\n              >\n                Cancel\n              </button>\n\n              <button\n                onClick={() => onAddLog(newLog)}\n                disabled={!newLog.date || !newLog.customer}\n                className=\"flex-1 px-6 py-3 rounded-2xl bg-gradient-to-r from-emerald-600 to-green-600 text-white font-medium hover:from-emerald-700 hover:to-green-700 shadow-lg hover:shadow-xl transition-all duration-200 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                Create Delivery Log\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 870, "column": 0}, "map": {"version":3,"sources":["file:///Users/mac/Documents/projects/Web%20Apps/Bumeh%20Homes/src/app/business/%5Bid%5D/page.js"],"sourcesContent":["\"use client\";\n\nimport { useState } from \"react\";\nimport { useParams } from \"next/navigation\";\nimport AddLogModal from \"@/components/EntryModal\";\n\nexport default function BusinessPage() {\n  const { id } = useParams();\n\n  const TRANSPORT_COST = { Idu: 40000, Aviation: 80000 };\n  const PRODUCT_PRICES = { Dust: 12000, \"3/8\": 12000, \"3/4\": 11000 };\n\n  const [logs, setLogs] = useState([\n    {\n      id: 1,\n      date: \"2025-10-24\",\n      location: \"Idu\",\n      customer: \"John Doe\",\n      products: [{ name: \"3/8\", tonnagePerTrip: [10, 12] }],\n      trips: 2,\n      paymentStatus: \"Paid\",\n    },\n    {\n      id: 2,\n      date: \"2025-10-23\",\n      location: \"Aviation\",\n      customer: \"Jane Smith\",\n      products: [{ name: \"Dust\", tonnagePerTrip: [15, 20] }],\n      trips: 2,\n      paymentStatus: \"Pending\",\n    },\n  ]);\n\n  const [showModal, setShowModal] = useState(false);\n  const [showFilters, setShowFilters] = useState(false);\n\n  // Filters\n  const [selectedMonth, setSelectedMonth] = useState(new Date().getMonth() + 1);\n  const [filterCustomer, setFilterCustomer] = useState(\"\");\n  const [filterPayment, setFilterPayment] = useState(\"\");\n\n  const calculateProductTotal = (product) =>\n    product.tonnagePerTrip.reduce(\n      (sum, tons) => sum + tons * PRODUCT_PRICES[product.name],\n      0\n    );\n\n  const calculateTransportTotal = (log) =>\n    log.trips * TRANSPORT_COST[log.location];\n\n  const calculateGrandTotal = (log) =>\n    log.products.reduce((sum, p) => sum + calculateProductTotal(p), 0) +\n    calculateTransportTotal(log);\n\n  const handleAddLog = (newLog) => {\n    const nextId = logs.length ? Math.max(...logs.map((l) => l.id)) + 1 : 1;\n    setLogs([...logs, { id: nextId, ...newLog }]);\n    setShowModal(false);\n  };\n\n  // Filter logs\n  const filteredLogs = logs.filter((log) => {\n    const monthMatch = new Date(log.date).getMonth() + 1 === selectedMonth;\n    const customerMatch = filterCustomer\n      ? log.customer.toLowerCase().includes(filterCustomer.toLowerCase())\n      : true;\n    const paymentMatch = filterPayment\n      ? log.paymentStatus === filterPayment\n      : true;\n    return monthMatch && customerMatch && paymentMatch;\n  });\n\n  const formatCurrency = (amount) =>\n    new Intl.NumberFormat(\"en-NG\", {\n      style: \"currency\",\n      currency: \"NGN\",\n    }).format(amount);\n\n  const formatDate = (dateString) =>\n    new Date(dateString).toLocaleDateString(\"en-US\", {\n      weekday: \"short\",\n      year: \"numeric\",\n      month: \"short\",\n      day: \"numeric\",\n    });\n\n  const getTotalRevenue = () =>\n    filteredLogs.reduce((sum, log) => sum + calculateGrandTotal(log), 0);\n\n  const getTotalLogs = filteredLogs.length;\n  const getPaidLogs = filteredLogs.filter(\n    (log) => log.paymentStatus === \"Paid\"\n  ).length;\n\n  const getPendingLogs = filteredLogs.filter(\n    (log) => log.paymentStatus === \"Pending\"\n  ).length;\n\n  const getPaidAmount = () =>\n    filteredLogs\n      .filter((log) => log.paymentStatus === \"Paid\")\n      .reduce((sum, log) => sum + calculateGrandTotal(log), 0);\n\n  const getPendingAmount = () =>\n    filteredLogs\n      .filter((log) => log.paymentStatus === \"Pending\")\n      .reduce((sum, log) => sum + calculateGrandTotal(log), 0);\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 to-slate-100 p-6\">\n      {/* Header */}\n      <div className=\"max-w-7xl mx-auto mb-8\">\n        <div className=\"flex justify-between items-start mb-6\">\n          <div>\n            <div className=\"flex items-center gap-3 mb-2\">\n              <button\n                onClick={() => window.history.back()}\n                className=\"p-2 hover:bg-white/50 rounded-2xl transition-colors duration-200\"\n              >\n                <svg\n                  className=\"w-5 h-5 text-slate-600\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M15 19l-7-7 7-7\"\n                  />\n                </svg>\n              </button>\n              <h1 className=\"text-3xl font-bold text-slate-900\">\n                Quarry Operations\n              </h1>\n            </div>\n            <p className=\"text-slate-600 text-lg ml-12\">\n              Delivery Logs & Analytics\n            </p>\n          </div>\n\n          {/* Filter Toggle */}\n          <div className=\"flex items-center gap-3\">\n            <button\n              onClick={() => setShowFilters(!showFilters)}\n              className={`flex items-center gap-2 px-4 py-2 rounded-2xl border transition-all duration-200 ${\n                showFilters\n                  ? \"bg-blue-50 border-blue-200 text-blue-700\"\n                  : \"bg-white border-slate-200 text-slate-700 hover:bg-slate-50\"\n              }`}\n            >\n              <svg\n                className=\"w-4 h-4\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M3 4a1 1 0 011-1h16a1 1 0 011 1v2.586a1 1 0 01-.293.707l-6.414 6.414a1 1 0 00-.293.707V17l-4 4v-6.586a1 1 0 00-.293-.707L3.293 7.414A1 1 0 013 6.707V4z\"\n                />\n              </svg>\n              Filters\n              {showFilters && (\n                <span className=\"w-2 h-2 bg-blue-500 rounded-full\"></span>\n              )}\n            </button>\n          </div>\n        </div>\n\n        {/* Stats Cards */}\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6 mb-6\">\n          <div className=\"bg-gradient-to-br from-slate-900 to-slate-800 rounded-3xl p-6 text-white\">\n            <div className=\"text-sm font-medium text-slate-300 mb-2\">\n              Total Revenue\n            </div>\n            <div className=\"text-2xl font-bold\">\n              {formatCurrency(getTotalRevenue())}\n            </div>\n            <div className=\"text-xs text-slate-400 mt-2\">\n              {getTotalLogs} log entries\n            </div>\n          </div>\n\n          <div className=\"bg-white rounded-3xl p-6 border border-slate-200\">\n            <div className=\"text-sm font-medium text-slate-600 mb-2\">\n              Completed Logs\n            </div>\n            <div className=\"text-2xl font-bold text-slate-900\">\n              {getTotalLogs}\n            </div>\n            <div className=\"text-xs text-slate-500 mt-2\">This month</div>\n          </div>\n\n          <div className=\"bg-white rounded-3xl p-6 border border-emerald-200\">\n            <div className=\"text-sm font-medium mb-2\">Paid Invoices</div>\n            <div className=\"text-2xl font-bold text-emerald-600 mb-1\">\n              {formatCurrency(getPaidAmount())}\n            </div>\n            <div className=\"text-xs text-emerald-600\">\n              {getPaidLogs} paid invoices\n            </div>\n            <div className=\"text-xs text-slate-500 mt-1\">\n              {getTotalLogs > 0\n                ? Math.round((getPaidLogs / getTotalLogs) * 100)\n                : 0}\n              % paid\n            </div>\n          </div>\n\n          <div className=\"bg-white rounded-3xl p-6 border border-amber-200 \">\n            <div className=\"text-sm font-medium mb-2\">Pending Payments</div>\n            <div className=\"text-2xl font-bold text-orange-600 mb-1\">\n              {formatCurrency(getPendingAmount())}\n            </div>\n            <div className=\"text-xs text-amber-600\">\n              {getPendingLogs} unpaid invoices\n            </div>\n            <div className=\"text-xs text-slate-500 mt-1\">\n              {getTotalLogs > 0\n                ? Math.round((getPendingLogs / getTotalLogs) * 100)\n                : 0}\n              % pending\n            </div>\n          </div>\n        </div>\n\n        {/* Hidden Filters Panel */}\n        {showFilters && (\n          <div className=\"bg-white/80 backdrop-blur-sm rounded-3xl p-6 border border-white/50 mb-6 animate-in fade-in duration-300\">\n            <div className=\"flex items-center justify-between mb-4\">\n              <h3 className=\"text-lg font-semibold text-slate-900\">\n                Filter Logs\n              </h3>\n              <button\n                onClick={() => setShowFilters(false)}\n                className=\"p-1 hover:bg-slate-100 rounded-xl transition-colors duration-200\"\n              >\n                <svg\n                  className=\"w-4 h-4 text-slate-500\"\n                  fill=\"none\"\n                  stroke=\"currentColor\"\n                  viewBox=\"0 0 24 24\"\n                >\n                  <path\n                    strokeLinecap=\"round\"\n                    strokeLinejoin=\"round\"\n                    strokeWidth={2}\n                    d=\"M6 18L18 6M6 6l12 12\"\n                  />\n                </svg>\n              </button>\n            </div>\n\n            <div className=\"grid grid-cols-1 md:grid-cols-3 gap-4\">\n              <div>\n                <label className=\"block text-sm font-medium text-slate-700 mb-2\">\n                  Month\n                </label>\n                <select\n                  value={selectedMonth}\n                  onChange={(e) => setSelectedMonth(Number(e.target.value))}\n                  className=\"w-full px-4 py-3 bg-slate-50 border border-slate-200 rounded-2xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-all duration-200\"\n                >\n                  {Array.from({ length: 12 }, (_, i) => i + 1).map((m) => (\n                    <option key={m} value={m}>\n                      {new Date(0, m - 1).toLocaleString(\"en-US\", {\n                        month: \"long\",\n                      })}\n                    </option>\n                  ))}\n                </select>\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-slate-700 mb-2\">\n                  Customer\n                </label>\n                <input\n                  type=\"text\"\n                  value={filterCustomer}\n                  onChange={(e) => setFilterCustomer(e.target.value)}\n                  placeholder=\"Search customers...\"\n                  className=\"w-full px-4 py-3 bg-slate-50 border border-slate-200 rounded-2xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-all duration-200\"\n                />\n              </div>\n\n              <div>\n                <label className=\"block text-sm font-medium text-slate-700 mb-2\">\n                  Payment Status\n                </label>\n                <select\n                  value={filterPayment}\n                  onChange={(e) => setFilterPayment(e.target.value)}\n                  className=\"w-full px-4 py-3 bg-slate-50 border border-slate-200 rounded-2xl focus:ring-2 focus:ring-blue-500 focus:border-blue-500 outline-none transition-all duration-200\"\n                >\n                  <option value=\"\">All Status</option>\n                  <option value=\"Paid\">Paid</option>\n                  <option value=\"Pending\">Pending</option>\n                </select>\n              </div>\n            </div>\n          </div>\n        )}\n      </div>\n\n      {/* Logs Grid with Add Card */}\n      <div className=\"max-w-7xl mx-auto\">\n        <div className=\"grid grid-cols-1 lg:grid-cols-2 xl:grid-cols-3 gap-6\">\n          {/* Add New Log Card */}\n          <div\n            onClick={() => setShowModal(true)}\n            className=\"group bg-gradient-to-br from-white to-slate-50/80 border-2 border-dashed border-slate-300 hover:border-emerald-400 rounded-3xl p-8 cursor-pointer transition-all duration-300 hover:shadow-lg backdrop-blur-sm flex flex-col items-center justify-center min-h-[280px]\"\n          >\n            <div className=\"w-16 h-16 bg-emerald-50 group-hover:bg-emerald-100 rounded-2xl flex items-center justify-center mb-4 transition-colors duration-300\">\n              <svg\n                className=\"w-8 h-8 text-emerald-500 group-hover:text-emerald-600 transition-colors duration-300\"\n                fill=\"none\"\n                stroke=\"currentColor\"\n                viewBox=\"0 0 24 24\"\n              >\n                <path\n                  strokeLinecap=\"round\"\n                  strokeLinejoin=\"round\"\n                  strokeWidth={2}\n                  d=\"M12 6v6m0 0v6m0-6h6m-6 0H6\"\n                />\n              </svg>\n            </div>\n            <h3 className=\"text-lg font-semibold text-slate-700 mb-2 text-center\">\n              New Delivery Log\n            </h3>\n            <p className=\"text-slate-500 text-sm text-center\">\n              Create a new customer delivery entry\n            </p>\n          </div>\n\n          {/* Log Entries */}\n          {filteredLogs.map((log) => {\n            const productTotal = log.products.reduce(\n              (sum, p) =>\n                sum +\n                p.tonnagePerTrip.reduce((a, b) => a + b, 0) *\n                  PRODUCT_PRICES[p.name],\n              0\n            );\n            const transportTotal = calculateTransportTotal(log);\n            const grandTotal = productTotal + transportTotal;\n\n            return (\n              <div\n                key={log.id}\n                className=\"group bg-white/90 backdrop-blur-sm rounded-3xl p-6 shadow-sm hover:shadow-xl cursor-pointer transition-all duration-500 border border-white/50 hover:border-white/80\"\n              >\n                <div className=\"flex justify-between items-start mb-4\">\n                  <div>\n                    <h3 className=\"text-lg font-semibold text-slate-900 mb-1 group-hover:text-slate-800\">\n                      {log.customer}\n                    </h3>\n                    <div className=\"flex items-center gap-2 text-sm text-slate-600 mb-1\">\n                      <svg\n                        className=\"w-4 h-4\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth={2}\n                          d=\"M8 7V3m8 4V3m-9 8h10M5 21h14a2 2 0 002-2V7a2 2 0 00-2-2H5a2 2 0 00-2 2v12a2 2 0 002 2z\"\n                        />\n                      </svg>\n                      {formatDate(log.date)}\n                    </div>\n                    <div className=\"flex items-center gap-2 text-sm text-slate-600\">\n                      <svg\n                        className=\"w-4 h-4\"\n                        fill=\"none\"\n                        stroke=\"currentColor\"\n                        viewBox=\"0 0 24 24\"\n                      >\n                        <path\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                          strokeWidth={2}\n                          d=\"M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z\"\n                        />\n                      </svg>\n                      {log.location}\n                    </div>\n                  </div>\n                  <span\n                    className={`px-3 py-1 rounded-full text-xs font-medium ${\n                      log.paymentStatus === \"Paid\"\n                        ? \"bg-emerald-100 text-emerald-800 border border-emerald-200\"\n                        : \"bg-amber-100 text-amber-800 border border-amber-200\"\n                    }`}\n                  >\n                    {log.paymentStatus}\n                  </span>\n                </div>\n                {/* Compact Delivery Summary */}\n                <div className=\"mb-4\">\n                  <h4 className=\"text-sm font-medium text-slate-700 mb-3\">\n                    DELIVERY SUMMARY\n                  </h4>\n                </div>\n                <div className=\"flex w-full justify-between gap-4 mb-4\">\n                  <div className=\"space-y-3 w-full\">\n                    {log.products.map((p, i) => {\n                      const totalTons = p.tonnagePerTrip.reduce(\n                        (a, b) => a + b,\n                        0\n                      );\n                      const productTrips = p.tonnagePerTrip.filter(\n                        (ton) => ton > 0\n                      ).length;\n\n                      return (\n                        <div\n                          key={i}\n                          className=\"border border-slate-200 rounded-xl p-3\"\n                        >\n                          <div className=\"flex  flex-col gap-4 text-sm\">\n                            <div className=\"flex justify-between items-center\">\n                              <div className=\"text-slate-500 text-xs mb-1\">\n                                Product\n                              </div>\n                              <div className=\"font-medium\">{p.name}</div>\n                            </div>\n                            <div className=\"flex justify-between items-center\">\n                              <div className=\"text-slate-500 text-xs mb-1\">\n                                Trips\n                              </div>\n                              <div className=\"font-medium\">{productTrips}</div>\n                            </div>\n                            <div className=\"flex justify-between items-center\">\n                              <div className=\"text-slate-500 text-xs mb-1\">\n                                Tonnage\n                              </div>\n                              <div className=\"font-medium\">\n                                {totalTons.toFixed(1)}t\n                              </div>\n                            </div>\n                            <div className=\"flex justify-between text-sm\">\n                              <span className=\"text-slate-600\">Transport:</span>\n                              <span className=\"font-medium\">\n                                <span className=\"font-medium\">\n                                  {formatCurrency(\n                                    log.trips * TRANSPORT_COST[log.location]\n                                  )}\n                                </span>\n                              </span>\n                            </div>\n                            <div className=\"flex justify-between text-sm\">\n                              <span className=\"text-slate-600\">\n                                Products Total:\n                              </span>\n                              <span className=\"font-medium\">\n                                {formatCurrency(\n                                  log.products.reduce((sum, p) => {\n                                    const totalTons = p.tonnagePerTrip.reduce(\n                                      (a, b) => a + b,\n                                      0\n                                    );\n                                    return (\n                                      sum + totalTons * PRODUCT_PRICES[p.name]\n                                    );\n                                  }, 0)\n                                )}\n                              </span>\n                            </div>\n                          </div>\n                        </div>\n                      );\n                    })}\n                  </div>\n                </div>\n                {/* Totals Section */}\n                <div className=\"pt-2 border-t border-slate-200\">\n                  <div className=\"flex justify-between items-center\">\n                    <span className=\"text-sm font-medium text-slate-700\">\n                      GRAND TOTAL\n                    </span>\n                    <span className=\"text-lg font-bold text-slate-900\">\n                      {formatCurrency(grandTotal)}\n                    </span>\n                  </div>\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n\n      {/* Modal */}\n      <AddLogModal\n        show={showModal}\n        onClose={() => setShowModal(false)}\n        onAddLog={handleAddLog}\n      />\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}